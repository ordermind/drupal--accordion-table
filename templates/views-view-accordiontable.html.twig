{#
/**
 * @file
 * Default theme implementation for displaying a view as an accordion table.
 *
 * Available variables:
 * - attributes: Remaining HTML attributes for the element.
 *   - class: HTML classes that can be used to style contextually through CSS.
 * - title : The title of this group of rows.
 * - header: The table header columns.
 *   - attributes: Remaining HTML attributes for the element.
 *   - content: HTML classes to apply to each header cell, indexed by
 *   the header's key.
 *   - default_classes: A flag indicating whether default classes should be
 *     used.
 * - caption_needed: Is the caption tag needed.
 * - caption: The caption for this table.
 * - accessibility_description: Extended description for the table details.
 * - accessibility_summary: Summary for the table details.
 * - rows: Table row items. Rows are keyed by row number.
 *   - attributes: HTML classes to apply to each row.
 *   - columns: Row column items. Columns are keyed by column number.
 *     - attributes: HTML classes to apply to each column.
 *     - content: The column content.
 *   - default_classes: A flag indicating whether default classes should be
 *     used.
 * - responsive: A flag indicating whether table is responsive.
 * - sticky: A flag indicating whether table header is sticky.
 * - summary_element: A render array with table summary information (if any).
 * - has_result: Is true if the view has found at least one row, otherwise false.
 * - separate_operations: Is true if the operations buttons should be separate, otherwise false.
 *
 * @see template_preprocess_views_view_accordiontable()
 *
 * @ingroup themeable
 */
#}
{%
  set tableClasses = [
    'cols-' ~ header|length,
    sticky ? 'sticky-enabled',
  ]
%}
<table{{attributes.addClass(tableClasses)}}>
  {% if caption_needed %}
    <caption>
      {% if caption %}
        {{ caption }}
      {% else %}
        {{ title }}
      {% endif %}
      {% if (summary_element is not empty) %}
        {{ summary_element }}
      {% endif %}
    </caption>
  {% endif %}
  {% if header %}
    <thead>
      <tr>
        {% for key, column in header %}
          {% if column.default_classes %}
            {%
              set column_classes = [
                'views-field',
                'views-field-' ~ fields[key],
              ]
            %}
          {% endif %}
          <th{{column.attributes.addClass(column_classes).setAttribute('scope','col')}}>
            {%- if column.wrapper_element -%}
              <{{column.wrapper_element}}>
                {%- if column.url -%}
                  <a href="{{ column.url }}" title="{{ column.title }}" rel="nofollow">{{ column.content }}{{ column.sort_indicator }}</a>
                {%- else -%}
                  {{ column.content }}{{ column.sort_indicator }}
                {%- endif -%}
              </{{column.wrapper_element}}>
            {%- else -%}
              {%- if column.url -%}
                <a href="{{ column.url }}" title="{{ column.title }}" rel="nofollow">{{ column.content }}{{ column.sort_indicator }}</a>
              {%- else -%}
                {{- column.content }}{{ column.sort_indicator }}
              {%- endif -%}
            {%- endif -%}
          </th>
        {% endfor %}
      </tr>
    </thead>
  {% endif %}
  <tbody>
    {% for index, row in rows %}
      <tr {{row.attributes.addClass('view').addClass((index + 1) % 2 == 0 ? 'even' : 'odd').addClass(separate_operations ? 'separate-operations-buttons' : null)}}>
        {% for key, column in row.columns %}
          {% if column.default_classes %}
            {%
              set column_classes = [
                'column',
                'views-field'
              ]
            %}
            {% for field in column.fields %}
              {% set column_classes = column_classes|merge(['views-field-' ~ field]) %}
            {% endfor %}
          {% endif %}
          <td{{column.attributes.addClass(column_classes)}}>
            {%- if column.wrapper_element -%}
              <{{column.wrapper_element}}>
                {% for content in column.content %}
                  {{ content.separator }}{{ content.field_output }}
                {% endfor %}
              </{{column.wrapper_element}}>
            {%- else -%}
              {% for content in column.content %}
                {{- content.separator }}{{ content.field_output -}}
              {% endfor %}
            {%- endif %}
          </td>
        {% endfor %}
      </tr>
      {% if has_result and responsive %}
        <tr class="fold separate-operations-buttons {{ (index + 1) % 2 == 0 ? 'even' : 'odd' }}">
          <td colspan="{{ row.columns| length }}">
          {% for key, column in row.columns %}
            {% if column.content[0].field_output|render|striptags|trim %}
              {% if column.default_classes %}
                {%
                  set column_classes = [
                    'views-field'
                  ]
                %}
                {% for field in column.fields %}
                  {% set column_classes = column_classes|merge(['views-field-' ~ field]) %}
                {% endfor %}
              {% endif %}
              {% if key in ['operation', 'operations'] %}
                <div{{column.attributes.addClass(column_classes)}}>
              {% else %}
                <div{{column.attributes.addClass(column_classes).addClass('field--label-inline clearfix')}}>
              {% endif %}
              {% if header and key not in['operation', 'operations'] %}
                <div class="field__label">{{ header[key].content}}</div>
              {% endif %}
                <div class="field__items">
                  {%- if column.wrapper_element -%}
                    <{{column.wrapper_element}}>
                      {% for content in column.content %}
                        {{ content.separator }}{{ content.field_output }}
                      {% endfor %}
                    </{{column.wrapper_element}}>
                  {%- else -%}
                    {% for content in column.content %}
                      {{- content.separator }}{{ content.field_output -}}
                    {% endfor %}
                  {%- endif %}
                </div>
              </div>
            {% endif %}
          {% endfor %}
          </td>
        </tr>
      {% endif %}
    {% endfor %}
  </tbody>
</table>
